<?php

namespace Keltanas\PageBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Keltanas\PageBundle\Entity\Post;
use Keltanas\UserBundle\Entity\User;

/**
 * PostRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PostRepository extends EntityRepository
{
    /**
     * @param User $user
     *
     * @return int
     * @throws \Doctrine\ORM\NoResultException
     * @throws \Doctrine\ORM\NonUniqueResultException
     */
    public function getCount(User $user = null)
    {
        $qb = $this->createQueryBuilder('p');
        $qb->select($qb->expr()->count('p'));
        if (null !== $user) {
            $qb->where('p.account = :user')->setParameter('user', $user->getId());
        }
        return $qb->getQuery()->getSingleScalarResult();
    }

    /**
     * @param int $offset
     * @param int $limit
     * @param User|null $user
     * @return Post[]
     */
    public function getAll($offset = 0, $limit = 100, User $user = null)
    {
        $qb = $this->createQueryBuilder('p');
        $qb->select('p');
        if (null !== $user) {
            $qb->where('p.account = :user')->setParameter('user', $user->getId());
        }

        $qb->setFirstResult($offset);
        $qb->setMaxResults($limit);

        return $qb->getQuery()->getResult();
    }

    /**
     * @param $tagName
     * @param User|null $user
     * @param bool $isAdmin
     *
     * @return \Doctrine\ORM\Query
     * @throws \Doctrine\ORM\NoResultException
     * @throws \Doctrine\ORM\NonUniqueResultException
     */
    public function getQueryForPaginator($tagName = null, User $user = null, $isAdmin = false)
    {
        $qb = $this->createQueryBuilder('p')
            ->orderBy('p.createdAt', 'desc')
        ;

        if (null !== $tagName) {
            $qb
                ->andWhere('p.tags LIKE :name')
                ->setParameter('name', '%'.$tagName.'%')
            ;
        }

        if (false === $isAdmin) {
            $qb->where('p.status = :status')->setParameter('status', 1);
        }

        if (null !== $user) {
            $qb->where('p.account = :user')->setParameter('user', $user->getId());
        }

        $query = $qb->getQuery();

        $qb->select($qb->expr()->count('p'));
        $count = $qb->getQuery()->getSingleScalarResult();
        $query->setHint('knp_paginator.count', $count);

        return $query;
    }
}
